14c14
< import smbus
---
> import smbus2 as smbus
98,99c98,99
<                         print "Error. Pi revision didn't recognize, module number: %s" % line[11:-1]
<                         print 'Exiting...'
---
>                         print("Error. Pi revision didn't recognize, module number: %s" % line[11:-1])
>                         print('Exiting...')
101c101
<         except Exception, e:
---
>         except:
103,104c103,104
<             print e
<             print 'Exiting...'
---
>             #print(e)
>             print('Exiting...')
111,112c111,112
<         if self._DEBUG:
<             print self._DEBUG_INFO, "Debug on"
---
>         #if self._DEBUG:
>         #    print(self._DEBUG_INFO, "Debug on")
119,120c119,120
<         if self._DEBUG:
<             print self._DEBUG_INFO, 'Reseting PCA9685 MODE1 (without SLEEP) and MODE2'
---
>         #if self._DEBUG:
>         #    print(self._DEBUG_INFO, 'Reseting PCA9685 MODE1 (without SLEEP) and MODE2')
134,135c134,135
<         if self._DEBUG:
<             print self._DEBUG_INFO, 'Writing value %2X to %2X' % (value, reg)
---
>         #if self._DEBUG:
>             #print(self._DEBUG_INFO, 'Writing value %2X to %2X' % (value, reg))
138,139c138
<         except Exception, i:
<             print i
---
>         except:
144,145c143,144
<         if self._DEBUG:
<             print self._DEBUG_INFO, 'Reading value from %2X' % reg
---
>         #if self._DEBUG:
>         #    print self._DEBUG_INFO, 'Reading value from %2X' % reg
149,150c148
<         except Exception, i:
<             print i
---
>         except:
156,158c154,156
<         print "\nYour Pi Rivision is: %s" % self._get_pi_revision()
<         print "I2C bus number is: %s" % bus_number
<         print "Checking I2C device:"
---
>         #print"\nYour Pi Rivision is: %s" % self._get_pi_revision()
>         #print "I2C bus number is: %s" % bus_number
>         #print "Checking I2C device:"
161,162c159,160
<         print 'Commands "%s" output:' % cmd
<         print output
---
>         #print 'Commands "%s" output:' % cmd
>         #print output
164c162
<             print "I2C device setup OK"
---
>             print("I2C device setup OK")
166c164
<             print "Seems like I2C has not been set. Use 'sudo raspi-config' to set I2C"
---
>             print("Seems like I2C has not been set. Use 'sudo raspi-config' to set I2C")
169,171c167,169
<         print "Your PCA9685 address is set to 0x%02X" % self.address
<         print "i2cdetect output:"
<         print output
---
>         #print "Your PCA9685 address is set to 0x%02X" % self.address
>         #print "i2cdetect output:"
>         #print output
180c178
<         print "Conneceted i2c device:"
---
>         print("Conneceted i2c device:")
182c180
<             print "None"
---
>             print("None")
185c183
<                 print "  0x%s" % address
---
>                 print("  0x%s" % address)
187c185
<             print "Wierd, I2C device is connected. Try to run the program again. If the problem's still, email the error message to service@sunfounder.com"
---
>             print("Wierd, I2C device is connected. Try to run the program again. If the problem's still, email the error message to service@sunfounder.com")
189,191c187,189
<             print "Device is missing."
<             print "Check the address or wiring of PCA9685 servo driver, or email the error message to service@sunfounder.com"
<             print 'Exiting...'
---
>             print("Device is missing.")
>             print("Check the address or wiring of PCA9685 servo driver, or email the error message to service@sunfounder.com")
>             print('Exiting...')
201,202c199,200
<         if self._DEBUG:
<             print self._DEBUG_INFO, 'Set frequency to %d' % freq
---
>         #if self._DEBUG:
>         #    print self._DEBUG_INFO, 'Set frequency to %d' % freq
208,210c206,208
<         if self._DEBUG:
<             print self._DEBUG_INFO, 'Setting PWM frequency to %d Hz' % freq
<             print self._DEBUG_INFO, 'Estimated pre-scale: %d' % prescale_value
---
>         #if self._DEBUG:
>         #    print self._DEBUG_INFO, 'Setting PWM frequency to %d Hz' % freq
>         #    print self._DEBUG_INFO, 'Estimated pre-scale: %d' % prescale_value
212,213c210,211
<         if self._DEBUG:
<             print self._DEBUG_INFO, 'Final pre-scale: %d' % prescale
---
>         #if self._DEBUG:
>         #    print self._DEBUG_INFO, 'Final pre-scale: %d' % prescale
225,226c223,224
<         if self._DEBUG:
<             print self._DEBUG_INFO, 'Set channel "%d" to value "%d"' % (channel, off)
---
>         #if self._DEBUG:
>         #    print self._DEBUG_INFO, 'Set channel "%d" to value "%d"' % (channel, off)
234,235c232,233
<         if self._DEBUG:
<             print self._DEBUG_INFO, 'Set all channel to value "%d"' % (off)
---
>         #if self._DEBUG:
>         #    print self._DEBUG_INFO, 'Set all channel to value "%d"' % (off)
257,260c255,258
<         if self._DEBUG:
<             print self._DEBUG_INFO, "Set debug on"
<         else:
<             print self._DEBUG_INFO, "Set debug off"
---
>         #if self._DEBUG:
>         #    print self._DEBUG_INFO, "Set debug on"
>         #else:
>         #    print self._DEBUG_INFO, "Set debug off"
269c267
<         print '\nChannel %d\n' % i
---
>         print('\nChannel %d\n' % i)
273c271
<             print 'PWM value: %d' % j
---
>             print('PWM value: %d' % j)
